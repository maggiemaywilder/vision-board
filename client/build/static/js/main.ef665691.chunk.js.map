{"version":3,"sources":["utils/API.js","components/SignupNav.js","pages/SignupPage.js","utils/GlobalState.js","pages/LoginPage.js","components/Navbar.js","utils/firebase.js","components/MyDropzone.js","utils/pixabay.js","components/PixabaySearch.js","components/UserLinks.js","pages/NewBoard.js","pages/BoardView.js","pages/HomePage.js","App.js","index.js"],"names":["uid","axios","get","bid","userData","post","data","put","uploadData","mid","delete","imgData","iid","linkData","linkId","SignupNav","alignLinks","brand","className","href","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","to","SignupPage","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","history","useHistory","m","s","name","label","placeholder","onChange","e","target","value","validate","node","type","waves","onClick","preventDefault","M","toast","html","document","querySelector","classList","contains","undefined","length","API","userName","then","res","console","log","push","catch","err","right","UserContext","createContext","user","Provider","userReducer","state","action","payload","currentBoard","UserProvider","props","useReducer","dispatch","useUserContext","useContext","LoginPage","statusCode","error","large","style","marginRight","Nav","sidenav","trigger","currentUserBoards","map","board","handleBoardSelect","divider","handleNewBoard","handleLogout","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","MyDropzone","files","setFiles","onDrop","useCallback","acceptedFiles","prev","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragReject","file","path","stopPropagation","forEach","currentBid","storageRef","storage","ref","metadata","contentType","uploadTask","child","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","parseInt","getDownloadURL","downloadURL","url","fileUpload","boardName","query","PixabaySearch","currentSearch","setCurrentSearch","currentPix","setCurrentPix","l","width","icon","pixabay","hits","pic","i","webformatURL","actions","handleImgSave","header","image","tags","UserLinks","link","setLink","setType","multiple","classes","dropdownOptions","typeSelect","selectedIndex","NewBoard","currentUser","setCurrentUser","useParams","setCurrentBoard","setCurrentUserBoards","setBoardName","useEffect","UserId","persist","newImgUrl","parentNode","getAttribute","img","opacity","visibility","BoardView","setBoard","currentUserId","setCurrentUserId","currentUploads","setCurrentUploads","currentImages","setCurrentImages","currentLinks","setCurrentLinks","updatedName","setUpdatedName","isEditing","setIsEditing","response","handleUploadDel","add","handleImgDel","handleLinkDel","lid","querySelectorAll","el","display","window","location","reload","u","alt","horizontal","HomePage","App","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ef665691.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n  // Gets all boards\n  getUserBoards: function (uid) {\n    return axios.get(`/api/${uid}/boards`);\n  },\n  // Gets the board with the given id\n  getBoard: function (bid) {\n    return axios.get(`/api/boards/${bid}`);\n  },\n  // Gets user by username\n  getUserByUsername: function (username) {\n    return axios.get(`/api/users/${username}`)\n  },\n  // Gets user by uid\n  getUserById: function (uid) {\n    return axios.get(`/api/users/${uid}`)\n  },\n  // Gets user with given uid\n  loginUser: function (userData) {\n    return axios.post(`/api/login`, userData);\n  },\n  // Add a new user to the database  \n  newUser: function (userData) {\n    return axios.post('/api/users', userData);\n  },\n  // Add a new board to the database\n  newBoard: function (uid) {\n    return axios.post(`/api/boards/${uid}/new`);\n  },\n  // Update a board with given id with data  \n  updateBoard: function (bid, data) {\n    return axios.put(`/api/boards/${bid}`, data);\n  },\n  // Add a new link\n  newUpload: function (uploadData, bid) {\n    return axios.post(`/api/${bid}/uploads`, uploadData);\n  },\n  // Get all user uploads attached to a board\n  getUploads: function (bid) {\n    return axios.get(`/api/${bid}/uploads`)\n  },\n  // Delete a file uploaded by the user\n  deleteUpload: function (mid) {\n    return axios.delete(`/api/uploads/${mid}`)\n  },\n  // Add a new image\n  newImage: function (imgData) {\n    return axios.post('/api/addImage', imgData);\n  },\n  // Get all user images attached to a board\n  getImages: function (bid) {\n    return axios.get(`/api/${bid}/images`)\n  },\n  // Delete an image\n  deleteImg: function (iid) {\n    return axios.delete(`/api/images/${iid}`)\n  },\n  // Add a new tag\n  newTag: function (mediaId, tagData) {\n    return axios.post(`/api/tags/${mediaId}`, tagData);\n  },\n  // Get all tags linked to a piece of media\n  getTags: function(mid) {\n    return axios.get(`/api/media/${mid}`)\n  },\n  // Delete a tag\n  deleteTag: function (tagId) {\n    return axios.delete(`/api/tags/${tagId}`)\n  },\n  // Add a link\n  newLink: function (linkData, bid) {\n    return axios.post(`/api/${bid}/links`, linkData);\n  },\n  // Get all links linked to a board\n  getLinks: function (bid) {\n    return axios.get(`/api/${bid}/links`)\n  },\n  // Delete a link\n  deleteLink: function (linkId) {\n    return axios.delete(`/api/links/${linkId}`)\n  }\n};","import { Navbar, NavItem, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom'\n\nfunction SignupNav() {\n    return (\n        <Navbar\n            alignLinks=\"left\"\n            brand={<a className=\"brand-logo right\" href='/'>Vision Boarder</a>}\n            id=\"mobile-nav\"\n            menuIcon={<Icon>menu</Icon>}\n            options={{\n                draggable: true,\n                edge: 'left',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                outDuration: 200,\n                preventScrolling: true\n            }}\n        >\n            <NavItem>\n                 <Link to=\"/login\">Log in</Link>\n            </NavItem>\n        </Navbar>\n    )\n}\n\nexport default SignupNav;","import { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { TextInput, Row, Col, CardPanel, Button, Icon } from 'react-materialize';\nimport API from '../utils/API';\nimport SignupNav from '../components/SignupNav';\nimport M from 'materialize-css';\n\nfunction SignupPage() {\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n    const history = useHistory();\n\n    const handleSignUp = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            M.toast(\n                {html: 'Oops! Password fields do not match.'}\n            )    \n        } else if (firstName === \"\" || lastName === \"\") {\n            M.toast({html: 'Oops! Please enter your full name.'})\n        } else if (document.querySelector('#userEmail').classList.contains('invalid')) {\n            M.toast({html: 'Oops! Please enter a valid email address.'});\n            setEmail('');\n        } else if (password === \"\" || password === undefined || password.length < 6 || confirmPassword === \"\") {\n            M.toast({html: 'Oops! Please enter a password of at least 6 characters.'})\n        } else {\n            const newUserData = {\n                firstName: firstName,\n                lastName: lastName,\n                userName: firstName + lastName,\n                email: email,\n                password: password\n            }\n            API.newUser(newUserData)\n            .then((res) => {\n                console.log(res);\n                M.toast({html: \"Signed up successfully!\"});\n                history.push('/login');\n            })\n            .catch((err) => {\n                if (err) {\n                    M.toast({html: 'Oops! Looks like there was an issue signing you up. Please try again in a few minutes.'});\n                }\n            });   \n        };\n    }\n\n    return (\n        <>\n            <SignupNav />\n            <div className=\"container\">\n                <Row>\n                    <Col\n                        m={8}\n                        s={12}\n                    >\n                        <CardPanel className=\"teal\">\n                            <span className=\"white-text\">\n                                Welcome to Vision Boarder! Sign up with your name and email address below.\n                            </span>\n                        </CardPanel>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col id=\"signupForm\"\n                        m={6}\n                        s={12}\n                    >\n                        <Row>\n                            <TextInput\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                label=\"First name\"\n                                placeholder=\"Jackie\"\n                                onChange={e => setFirstName(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <TextInput\n                                id=\"lastName\"\n                                name=\"lastName\"\n                                label=\"Last name\"\n                                placeholder=\"Smith\"\n                                onChange={e => setLastName(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <TextInput\n                                email\n                                id=\"userEmail\"\n                                name=\"email\"\n                                label=\"Email\"\n                                validate\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <TextInput\n                                id=\"userPassword\"\n                                name=\"password\"\n                                label=\"Password\"\n                                password\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <TextInput\n                                id=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                name=\"confirmPassword\"\n                                password\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n                    <Button\n                        node=\"button\"\n                        type=\"button\"\n                        waves=\"light\"\n                        onClick={handleSignUp}\n                    >\n                        Sign up\n                    <Icon right>send</Icon>\n                    </Button>\n                </Row>\n            </div>\n           \n        </>\n    )\n}\n\nexport default SignupPage;\n","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst UserContext = createContext({\n  user: {}\n});\nconst { Provider } = UserContext;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n  case \"setCurrentUser\":\n    return [ ...state, \n        {user: action.payload}\n    ];\n  case \"setCurrentBoard\":\n      return [ ...state,\n        {currentBoard: action.payload}\n    ];\n    case \"logoutUser\":\n      return [...state,\n        {user: action.payload}\n      ]\n  default:\n    return state;\n  }\n}\n\nfunction UserProvider({ value = {}, ...props }) {\n  const [state, dispatch] = useReducer(userReducer, []);\n\n  return <Provider value={{state, dispatch}} {...props} />;\n}\n\nfunction useUserContext() {\n  return useContext(UserContext);\n}\n\nexport { UserProvider, useUserContext };","/* eslint-disable no-unused-vars */\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, TextInput, Button, CardPanel } from 'react-materialize';\nimport { useUserContext } from '../utils/GlobalState';\nimport SignupNav from '../components/SignupNav';\nimport M from 'materialize-css';\nimport API from '../utils/API';\n\nfunction LoginPage() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState(\"\");\n    const history = useHistory();\n    const { state, dispatch } = useUserContext();\n\n    const handleSignin = (e) => {\n        e.preventDefault();\n        if (document.querySelector('#userEmail').classList.contains('invalid')) {\n            M.toast({html: \"Oops! Looks like that email is invalid. Try again.\"});\n            setEmail(\"\");\n        } else {\n            const userData = {\n                email: email,\n                password: password\n            }\n            API.loginUser(userData)\n            .then((res) => {\n                if (res.statusCode === 404) {\n                    M.toast({html: \"Oops! Looks like your account wasn't found. Try again.\"})\n                } else {\n                    dispatch({ \n                        type: 'setCurrentUser',\n                        payload: res.data\n                    });\n                    history.push(`/users/${res.data.userName}`) \n                }\n                \n            })\n            .catch(err => console.error(err));\n        }\n    }\n\n    return (\n        <>\n            <SignupNav />\n            <div className=\"container\">\n                <Row>\n                    <Col\n                        m={8}\n                        s={12}\n                    >\n                        <CardPanel className=\"teal\">\n                            <span className=\"white-text\">\n                                Welcome back to Vision Boarder! Sign in with your email address and password below.\n                            </span>\n                        </CardPanel>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col\n                        m={6}\n                        s={12}\n                    >\n                        <Row>\n                            <TextInput\n                                id=\"userEmail\"\n                                name=\"email\"\n                                label=\"Email\"\n                                validate\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <TextInput\n                                password\n                                id=\"userPassword\"\n                                name=\"password\"\n                                label=\"Password\"\n                                placeholder={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Row>\n                        <Row>\n                            <Button onClick={handleSignin}\n                                large\n                                node=\"button\"\n                                style={{\n                                    marginRight: '5px'\n                                }}\n                                waves=\"light\"\n                            >\n                            Sign in \n                            </Button>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        </>                        \n    )\n}\n\nexport default LoginPage;","import { Navbar, NavItem, SideNav, SideNavItem, Dropdown, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nfunction Nav(props) {\n\n    return (\n        <Navbar\n            alignLinks=\"right\"\n            brand={<a className=\"brand-logo\" href='/login'>Vision Boarder</a>}\n            id=\"mobile-nav\"\n            menuIcon={<Icon>menu</Icon>}\n            options={{\n                draggable: true,\n                edge: 'left',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                outDuration: 200,\n                preventScrolling: true\n            }}\n            sidenav={\n                <SideNav\n                    id=\"SideNav-10\"\n                    options={{\n                        draggable: true\n                    }}\n                    trigger={<Button node=\"button\">My Boards</Button>}\n                >\n                    {props.currentUserBoards ? props.currentUserBoards.map((board) => {\n                        return (\n                            <>\n                                <SideNavItem key={board.id}>\n                                    <a href={`/boards/${board.id}`} id={board.id} onClick={props.handleBoardSelect}>\n                                        {board.name}\n                                    </a>\n                                </SideNavItem>\n                                <SideNavItem divider />\n                            </>\n                        )\n                    }) : <p>Loading...</p>}\n                    <SideNavItem>\n                        <Button\n                            large\n                            id=\"newBoardBtn\"\n                            node=\"button\"\n                            style={{\n                                marginRight: '5px'\n                            }}\n                            waves=\"light\"\n                            onClick={props.handleNewBoard}\n                        >\n                            Create New Board\n                        </Button>\n                    </SideNavItem>\n                    <SideNavItem>\n                        <Link to='/' onClick={props.handleLogout}>Log out</Link>\n                    </SideNavItem>\n                </SideNav>\n            }\n        >\n            <Dropdown\n                id=\"Dropdown_7\"\n                options={{\n                    alignment: 'left',\n                    autoTrigger: true,\n                    closeOnClick: true,\n                    constrainWidth: true,\n                    container: null,\n                    coverTrigger: true,\n                    hover: false,\n                    inDuration: 150,\n                    onCloseEnd: null,\n                    onCloseStart: null,\n                    onOpenEnd: null,\n                    onOpenStart: null,\n                    outDuration: 250\n                }}\n                trigger={<Link>My Boards<Icon right>arrow_drop_down</Icon></Link>}\n            >\n                {props.currentUserBoards ? props.currentUserBoards.map((board) => {\n                    return (\n                        <a key={board.id} href={`/boards/${board.id}`} onClick={props.handleBoardSelect}>\n                            {board.name}\n                        </a>\n                    )\n                }) : <p>Loading...</p>}\n            </Dropdown>\n            <NavItem>\n                <Button\n                    large\n                    id=\"newBoardBtn2\"\n                    node=\"button\"\n                    style={{\n                        marginRight: '5px'\n                    }}\n                    waves=\"light\"\n                    onClick={props.handleNewBoard}\n                >\n                    Create New Board\n                </Button>\n            </NavItem>\n            <NavItem>\n                <Link to='/' onClick={props.handleLogout}>Log out</Link>\n            </NavItem>\n        </Navbar>\n    )\n}\n\nexport default Nav;","import firebase from 'firebase';\nimport API from './API';\n\nexport const fbapp = firebase.initializeApp({\n    apiKey: \"AIzaSyAc6AeqA_ePg70BX04lrb2j8aw7J24f4lg\",\n    authDomain: \"vision-boarder.firebaseapp.com\",\n    projectId: \"vision-boarder\",\n    storageBucket: \"vision-boarder.appspot.com\",\n    messagingSenderId: \"729873887848\",\n    appId: \"1:729873887848:web:91726957fb9d66f97d01dd\",\n    measurementId: \"G-DB8H24C33C\"\n  });\n\nexport function fileUpload(file, currentBid) {\n    // Points to the root reference\n    var storageRef = firebase.storage().ref();\n\n    // Create the file metadata\n    var metadata = {\n        contentType: file.type,\n    };\n\n    // Upload file and metadata to the object 'images/mountains.jpg'\n    var uploadTask = storageRef.child('images/' + file.name).put(file, metadata);\n\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n        (snapshot) => {\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n            switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\n                    console.log('Upload is paused');\n                    break;\n                case firebase.storage.TaskState.RUNNING: // or 'running'\n                    console.log('Upload is running');\n                    break;\n                default:\n                    console.log('No upload currently');\n            }\n        },\n        (error) => {\n            // A full list of error codes is available at\n            // https://firebase.google.com/docs/storage/web/handle-errors\n            switch (error.code) {\n                case 'storage/unauthorized':\n                    // User doesn't have permission to access the object\n                    break;\n                case 'storage/canceled':\n                    // User canceled the upload\n                    break;\n\n                // ...\n\n                case 'storage/unknown':\n                    // Unknown error occurred, inspect error.serverResponse\n                    break;\n                default:\n                    console.log('No upload currently');\n            }\n        },\n        () => {\n            const bid = parseInt(currentBid)\n            // Upload completed successfully, now we can get the download URL\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                API.newUpload({url: downloadURL}, bid)\n                .then((res) => {\n                    console.log('File saved successfully', res);\n                })\n                .catch(err => console.error(err));\n            });\n        }\n    );\n}","/* eslint-disable no-unused-vars */\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { fbapp, fileUpload } from '../utils/firebase';\nimport { Row, Button } from 'react-materialize';\nimport M from 'materialize-css';\n\nfunction MyDropzone(props) {\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prev => [...prev, ...acceptedFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png, application/pdf'\n  });\n\n  const handleUpload = (e) => {\n    e.stopPropagation();\n    if (files) {\n      files.forEach((file) => {\n        fileUpload(file, props.bid);\n      });\n      M.toast({ html: `File(s) saved to ${props.boardName} successfully!` });\n      setFiles([]);\n    } else {\n      M.toast({ html: \"Please drag and drop or select a file to upload.\" });\n    }\n  }\n\n  return (\n    <section className=\"container\">\n      <div id=\"dropzone\" {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        {!isDragActive && 'Click here or drop a file to upload!'}\n        {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n        {isDragReject && \"File type not accepted, sorry!\"}\n        <Row>\n          <p>Files:</p>\n          <ul>\n            {files.map(file => (\n              <li>\n                {file.path}\n              </li>\n            ))}\n          </ul>\n        </Row>\n        <Button className=\"orange darken-3\" onClick={handleUpload}>Upload</Button>\n      </div>\n    </section>\n  );\n}\n\nexport default MyDropzone;","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nconst BASEURL = \"https://pixabay.com/api/?key=20053744-d90ffc8b7653149ca73d2a0ac&q=\";\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL + query);\n  }\n};","import { Row, Col, Card, CardTitle, CardPanel, TextInput, Button } from 'react-materialize';\nimport { useState } from 'react';\nimport pixabay from '../utils/pixabay';\n\nfunction PixabaySearch(props) {\n    const [currentSearch, setCurrentSearch] = useState(\"\");\n    const [currentPix, setCurrentPix] = useState();\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setCurrentSearch(e.target.value);\n        pixabay.search(currentSearch)\n            .then((res) => {\n                setCurrentPix(res.data.hits);\n            })\n            .catch(err => console.error(err));\n    }\n\n    return (\n        <>\n            <Col l={6} s={12}>\n                <Row>\n                    <CardPanel className=\"teal darken-3\">\n                        <span className=\"white-text\">\n                            Search Pixabay to Add Photos\n                    </span>\n                    </CardPanel>\n                </Row>\n                <div id=\"pixabay\">\n                <Row>\n                    <TextInput style={{ width: 500 }}\n                        name=\"currentSearch\"\n                        icon=\"search\"\n                        label=\"Search...\"\n                        value={currentSearch}\n                        onChange={handleSearch}\n                    />\n                </Row>\n                <Row id=\"pixRow\">\n                    {currentPix ?\n                    <>\n                        {currentPix.map((pic, i) => (\n                             <Card key={i}\n                             id={pic.webformatURL}\n                             className=\"hoverable pix\"\n                             actions={[\n                               <Button className=\"orange darken-3\" onClick={props.handleImgSave}>Save to Board</Button>\n                             ]}\n                             header={<CardTitle image={pic.webformatURL}><span className=\"imgCardTitle\">{pic.tags}</span></CardTitle>}\n                           >\n                           </Card>\n                        ))}\n                    </> : \n                        <div id=\"nosearch\">\n                            <h5>No search data yet</h5>\n                        </div>\n                    }\n                </Row>\n                </div>\n            </Col>\n        </>\n    )\n}\n\nexport default PixabaySearch;","import { Row, TextInput, Select, Button } from 'react-materialize';\nimport { useState } from 'react';\nimport API from '../utils/API';\nimport M from 'materialize-css';\n\n\nfunction UserLinks(props) {\n    const [link, setLink] = useState();\n    const [type, setType] = useState();\n\n    const handleLinkSave = (e) => {\n        const typeSelect = document.querySelector('#typeSelect');\n        e.preventDefault();\n        setType(typeSelect.options[typeSelect.selectedIndex].value);\n        API.newLink({url: link, type: type}, props.bid)\n        .then((res) => {\n            if (res.data) {\n                M.toast({html: \"Link saved!\"});\n                setLink(\"\");\n            } else {\n                M.toast({html: \"Hmm, looks like there was an error saving that link. Try again.\"});\n            }\n        })\n        .catch(err => console.error(err));\n    }\n\n    return (\n        <div className=\"container\">\n            <Row>\n                <TextInput\n                    id=\"addLink\"\n                    label=\"Add a link...\"\n                    value={link}\n                    style={{width: 400}}\n                    onChange={e => setLink(e.target.value)}\n                />\n            </Row>\n            <Row>\n                <Select\n                    id=\"typeSelect\"\n                    multiple={false}\n                    onChange={function noRefCheck() { }}\n                    options={{\n                        classes: '',\n                        dropdownOptions: {\n                            alignment: 'left',\n                            autoTrigger: true,\n                            closeOnClick: true,\n                            constrainWidth: true,\n                            coverTrigger: true,\n                            hover: false,\n                            inDuration: 150,\n                            onCloseEnd: null,\n                            onCloseStart: null,\n                            onOpenEnd: null,\n                            onOpenStart: null,\n                            outDuration: 250\n                        }\n                    }}\n                    value=\"\"\n                >\n                    <option value=\"inspiration\">\n                        Inspiration\n                    </option>\n                    <option value=\"research\">\n                        Research\n                    </option>\n                    <option value=\"video\">\n                        Video\n                    </option>\n                </Select>\n                <Button className=\"orange darken-3\" onClick={handleLinkSave}>Save</Button>\n            </Row>\n        </div>\n    )\n}\n\nexport default UserLinks;","import Nav from '../components/Navbar';\nimport MyDropzone from '../components/MyDropzone';\nimport PixabaySearch from '../components/PixabaySearch';\nimport UserLinks from '../components/UserLinks';\nimport { Row, Col, CardPanel, TextInput, Button } from 'react-materialize';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport M from 'materialize-css';\n\n\nfunction NewBoard() {\n    const { state, dispatch } = useUserContext();\n    const [currentUser, setCurrentUser] = useState();\n    const { bid } = useParams();\n    const [currentBoard, setCurrentBoard] = useState();\n    const [currentUserBoards, setCurrentUserBoards] = useState();\n    const [boardName, setBoardName] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        API.getBoard(bid)\n            .then((res) => {\n                setCurrentBoard(res.data);\n                API.getUserBoards(res.data.UserId)\n                .then((res) => {\n                    setCurrentUserBoards(res.data);\n                })\n                .catch(err => console.error(err));\n                API.getUserById(res.data.UserId)\n                .then((res) => {\n                    setCurrentUser(res.data);\n                })\n                .catch(err => console.error(err));\n            })\n            .catch(err => console.error(err));\n    }, [bid]);\n\n    const handleNewBoard = (e) => {\n        e.preventDefault();\n        API.newBoard(currentUser.id)\n            .then((res) => {\n                console.log(res);\n                dispatch({\n                    type: \"setCurrentUser\",\n                    payload: currentUser\n                });\n                history.push(`/boards/new/${res.data.id}`)\n            })\n            .catch(err => console.error(err));\n    }\n\n    const handleImgSave = (e) => {\n        e.preventDefault();\n        e.persist();\n        const newImgUrl = e.target.parentNode.parentNode.getAttribute('id')\n        API.newImage({ img: newImgUrl, bid: currentBoard.id })\n            .then((res) => {\n                if (res.data) {\n                    M.toast({ html: `Image saved to ${boardName} successfully!` });\n                    e.target.parentNode.parentNode.style.opacity = \"0.2\";\n                    e.target.style.visibility = \"hidden\";\n                } else {\n                    M.toast({ html: \"Hmm, we ran into an issue saving that image. Please try again.\" })\n                }\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleBoardSelect = (e) => {\n        const bid = e.target.id\n        API.getBoard(bid)\n            .then((res) => {\n                dispatch({\n                    type: \"setCurrentBoard\",\n                    payload: res.data\n                });\n            })\n            .then(() => {\n                history.push(`/boards/${bid}`)\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleBoardSave = (e) => {\n        e.preventDefault();\n        if (boardName === \"\") {\n            M.toast({ html: \"Looks like your board doesn't have a name...\" })\n        } else {\n            API.updateBoard(parseInt(currentBoard.id), { name: boardName })\n                .then((res) => {\n                    console.log(res);\n                    M.toast({ html: `${boardName} saved!` });\n                    dispatch({\n                        type: \"setCurrentBoard\",\n                        payload: currentBoard\n                    });\n                    history.push(`/boards/${currentBoard.id}`);\n                })\n        }\n\n    }\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n        history.push('/');\n    }\n\n    return (\n        <>\n            <Nav currentUserBoards={currentUserBoards} handleBoardSelect={handleBoardSelect} handleNewBoard={handleNewBoard} handleLogout={handleLogout}/>\n            { currentBoard ?\n                <>\n                <Row>\n                <Col s={12} l={6}>\n                    <div id=\"newBoardName\">\n                        <TextInput style={{ width: 500 }}\n                            id=\"name\"\n                            label=\"Board Name\"\n                            name=\"boardName\"\n                            placeholder=\"New Board\"\n                            value={boardName}\n                            onChange={e => setBoardName(e.target.value)}\n                        />\n                    </div>\n                </Col>\n                <Col s={12} l={6}>\n                    <div className=\"container\">\n                        <Button className=\"orange darken-3\" onClick={handleBoardSave}>Save {boardName}</Button>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col l={6} s={12}>\n                    <CardPanel className=\"teal darken-3\">\n                        <span className=\"white-text\">\n                            Add Personal Images and Files (PDF, .jpeg, or .png)\n                    </span>\n                    </CardPanel>\n                    <MyDropzone bid={currentBoard.id} boardName={boardName} />\n                    <Row>\n                        <CardPanel className=\"teal darken-3\">\n                            <span className=\"white-text\">\n                                Add Inspiration, Research, or Video Links from the web\n                            </span>\n                        </CardPanel>\n                        <UserLinks bid={currentBoard.id} />\n                    </Row>\n                </Col>\n                <PixabaySearch handleImgSave={handleImgSave} />\n            </Row>\n            </>\n            : <p>Finding that board...</p>}\n            \n        </>\n    )\n}\n\nexport default NewBoard;","/* eslint-disable no-unused-vars */\nimport Nav from '../components/Navbar';\nimport { Row, Col, Card, CardPanel, CardTitle, Collection, CollectionItem, TextInput, Button, Icon } from 'react-materialize';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport MyDropzone from '../components/MyDropzone';\nimport PixabaySearch from '../components/PixabaySearch';\nimport UserLinks from '../components/UserLinks';\nimport M from 'materialize-css';\n\nfunction BoardView() {\n    const { state, dispatch } = useUserContext();\n    const { bid } = useParams();\n    const [board, setBoard] = useState();\n    const [currentUserBoards, setCurrentUserBoards] = useState();\n    const [currentUserId, setCurrentUserId] = useState();\n    const [currentUser, setCurrentUser] = useState();\n    const [currentUploads, setCurrentUploads] = useState([]);\n    const [currentImages, setCurrentImages] = useState();\n    const [currentLinks, setCurrentLinks] = useState();\n    const [updatedName, setUpdatedName] = useState(\"\");\n    const [isEditing, setIsEditing] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\n        API.getBoard(bid)\n            .then((res) => {\n                setBoard(res.data);\n                setCurrentUserId(res.data.UserId);\n                API.getUserBoards(res.data.UserId)\n                    .then((response) => {\n                        setCurrentUserBoards(response.data);\n                    })\n                    .catch(err => console.error(err));\n                API.getUserById(res.data.UserId)\n                    .then((res) => {\n                        setCurrentUser(res.data);\n                    })\n                    .catch(err => console.error(err));\n            })\n            .catch(err => console.error(err));\n        API.getUploads(bid)\n            .then((res) => {\n                setCurrentUploads(res.data);\n            })\n            .catch(err => console.error(err));\n        API.getImages(bid)\n            .then((res) => {\n                setCurrentImages(res.data)\n            })\n            .catch(err => console.error(err));\n        API.getLinks(bid)\n            .then((res) => {\n                setCurrentLinks(res.data)\n            })\n            .catch(err => console.error(err));\n    }, [bid]);\n\n    const handleBoardSelect = (e) => {\n        const bid = e.target.id\n        API.getBoard(bid)\n            .then((res) => {\n                dispatch({\n                    type: \"setCurrentBoard\",\n                    payload: res.data\n                });\n            })\n            .then(() => {\n                history.push(`/boards/${bid}`)\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleNewBoard = () => {\n        API.getUserById(currentUserId)\n            .then((res) => {\n                setCurrentUser(res.data);\n            })\n            .then(() => {\n                API.newBoard(currentUserId)\n                    .then((res) => {\n                        dispatch({\n                            type: \"setCurrentUser\",\n                            payload: currentUser\n                        });\n                        history.push(`/boards/new/${res.data.id}`)\n                    })\n                    .catch(err => console.error(err))\n            })\n            .catch((err) => console.error(err));\n    }\n\n    const handleBoardEdit = (e) => {\n        e.preventDefault();\n        e.persist();\n        document.querySelectorAll('.deleteImgBtn').forEach(el => el.style.display = \"inline\");\n        document.querySelectorAll('.deleteUploadBtn').forEach(el => el.style.display = \"inline\");\n        document.querySelectorAll('.deleteLinkBtn').forEach(el => el.style.display = \"inline\")\n        document.querySelector('#boardViewRename').style.display = \"inline\";\n        document.querySelector('#boardSaveBtn').style.display = \"inline\";\n        e.target.style.display = 'none';\n        setIsEditing(true);\n    }\n    \n    const handleImgSave = (e) => {\n        e.preventDefault();\n        e.persist();\n        const newImgUrl = e.target.parentNode.parentNode.getAttribute('id')\n        API.newImage({ img: newImgUrl, bid: board.id })\n            .then((res) => {\n                if (res.data) {\n                    M.toast({ html: `Image saved to ${board.name} successfully!` });\n                    e.target.parentNode.parentNode.style.opacity = \"0.2\";\n                    e.target.style.visibility = \"hidden\";\n                } else {\n                    M.toast({ html: \"Hmm, we ran into an issue saving that image. Please try again.\" })\n                }\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleUploadDel = (e) => {\n        e.preventDefault();\n        e.persist();\n        const mid = e.target.getAttribute('id');\n        API.deleteUpload(mid)\n            .then((res) => {\n                console.log(res);\n                e.target.parentNode.classList.add('disabled');\n                M.toast({ html: \"Upload deleted!\" });\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleImgDel = (e) => {\n        e.preventDefault();\n        e.persist();\n        const iid = e.target.getAttribute('id');\n        API.deleteImg(iid)\n            .then((res) => {\n                console.log(res);\n                e.target.parentNode.classList.add('disabled');\n                M.toast({ html: \"Image deleted!\" });\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleLinkDel = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        e.persist();\n        const lid = e.target.getAttribute('id');\n        API.deleteLink(lid)\n            .then((res) => {\n                console.log(res);\n                e.target.parentNode.classList.add('disabled');\n                M.toast({ html: \"Link deleted!\" });\n            })\n            .catch(err => console.error(err))\n    }\n\n    const handleBoardUpdate = (e) => {\n        e.preventDefault();\n        if (updatedName !== \"\") {\n            API.updateBoard(board.id, { name: updatedName })\n            .then((res) => {\n                if (res.data) window.location.reload();\n            })\n            .catch(err => console.error(err));\n        } else {\n            window.location.reload();\n        }\n    }\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n        history.push('/');\n    }\n\n    return (\n        <>\n            <Nav currentUserBoards={currentUserBoards} handleBoardSelect={handleBoardSelect} handleNewBoard={handleNewBoard} handleLogout={handleLogout} />\n            <Row>\n                {board ?\n                    <>\n                        <div id=\"boardViewName\">\n                            <h2>{board.name}</h2>\n                        </div>\n                        <div id=\"boardViewRename\">\n                            <h4>\n                                <TextInput\n                                    id=\"updateBoardName\"\n                                    value={updatedName}\n                                    onChange={e => setUpdatedName(e.target.value)}\n                                />\n                            </h4>\n                        </div>\n                        <Button onClick={handleBoardEdit}>Edit</Button>\n                        <Button className=\"red darken-2\" id=\"boardSaveBtn\" onClick={handleBoardUpdate}>Save</Button>\n                    </>\n                    : <p>Finding that board...</p>}\n            </Row>\n            <Row>\n                <Col s={12} l={8}>\n                    {currentUploads ?\n                        currentUploads.map((u) => (\n                            <Card key={u.id}\n                                actions={[\n                                    <Button\n                                        key={u.id}\n                                        id={u.id}\n                                        className=\"red deleteUploadBtn\"\n                                        onClick={handleUploadDel}\n                                        icon={<Icon id={u.id}>delete</Icon>}\n                                        alt=\"Remove this upload\"\n                                        node=\"button\"\n                                        waves=\"light\"\n                                    />\n                                ]}\n                                header={<CardTitle image={u.url} />}\n                                horizontal\n                                className=\"hoverable boardViewUpload\"\n                            >\n                                Tags:\n                            </Card>\n                        )) :\n                        <h4>Loading uploads...</h4>\n                    }\n                </Col>\n                <Col s={12} l={4}>\n                    <Row>\n                        {currentImages ?\n                            currentImages.map((i) => (\n                                <Card key={i.id}\n                                    actions={[\n                                        <Button\n                                            key={i.id}\n                                            id={i.id}\n                                            className=\"red deleteImgBtn\"\n                                            onClick={handleImgDel}\n                                            icon={<Icon id={i.id}>delete</Icon>}\n                                            alt=\"Remove this image\"\n                                            node=\"button\"\n                                            waves=\"light\"\n                                        />\n                                    ]}\n                                    header={<CardTitle image={i.url} />}\n                                    horizontal\n                                    className=\"hoverable boardViewImg\"\n                                >\n                                    Tags:\n                                </Card>\n                            )) :\n                            <h4>Loading images...</h4>\n                        }\n                    </Row>\n                    <Row>\n                        <Collection header=\"Links\">\n                            {currentLinks ?\n                                currentLinks.map((l) => (\n                                    <CollectionItem key={l.id} href={l.url} target=\"_blank\">\n                                        {l.url} - {l.type}\n                                        <Button\n                                            id={l.id}\n                                            className=\"deleteLinkBtn\"\n                                            onClick={handleLinkDel}\n                                            icon={<Icon id={l.id}>delete</Icon>}\n                                            alt=\"Remove this link\"\n                                            node=\"button\"\n                                            waves=\"light\"\n                                        />\n                                    </CollectionItem>\n                                )) :\n                                <div>\n                                    <p>Loading links...</p>\n                                </div>\n                            }\n                        </Collection>\n                    </Row>\n                </Col>\n            </Row>\n            { isEditing ?\n                <Row>\n                    <Col l={6} s={12}>\n                        <CardPanel className=\"teal darken-3\">\n                            <span className=\"white-text\">\n                                Add Personal Images and Files (PDF, .jpeg, or .png)\n                        </span>\n                        </CardPanel>\n                        <MyDropzone bid={board.id} boardName={board.name} />\n                        <Row>\n                            <CardPanel className=\"teal darken-3\">\n                                <span className=\"white-text\">\n                                    Add Inspiration, Research, or Video Links from the web\n                                </span>\n                            </CardPanel>\n                            <UserLinks bid={board.id} />\n                        </Row>\n                    </Col>\n                    <PixabaySearch handleImgSave={handleImgSave} />\n                </Row>\n                :\n                <div>\n                </div>\n            }\n\n        </>\n    )\n}\n\nexport default BoardView;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport { useUserContext } from '../utils/GlobalState';\nimport Nav from '../components/Navbar';\nimport { Row, Col, CardPanel } from 'react-materialize';\n\nfunction HomePage() {\n    const { state, dispatch } = useUserContext();\n    const currentUser = state[0].user\n    const [currentUserBoards, setCurrentUserBoards] = useState();\n    const history = useHistory();\n\n    useEffect(() => {\n        API.getUserBoards(currentUser.id)\n            .then((response) => {\n                setCurrentUserBoards(response.data);\n            })\n            .catch(err => console.error(err))\n}, [currentUser.id]);\n\nconst handleBoardSelect = (e) => {\n    const bid = e.target.id\n    API.getBoard(bid)\n        .then((res) => {\n            dispatch({\n                type: \"setCurrentBoard\",\n                payload: res.data\n            });\n        })    \n        .then(() => {\n            history.push(`/boards/${bid}`)\n        })\n        .catch(err => console.error(err))\n}\n\nconst handleNewBoard = () => {\n    API.newBoard(currentUser.id)\n        .then((res) => {\n            console.log(res);\n            dispatch({\n                type: \"setCurrentUser\",\n                payload: currentUser\n            });\n            history.push(`/boards/new/${res.data.id}`)\n        })\n        .catch(err => console.error(err))\n}\n\nconst handleLogout = (e) => {\n    e.preventDefault();\n    dispatch({\n        type: \"logoutUser\",\n        payload: \"\"\n    });\n    history.push('/');\n}\n\nreturn (\n    <>\n        <Nav currentUserBoards={currentUserBoards} handleBoardSelect={handleBoardSelect} handleNewBoard={handleNewBoard} handleLogout={handleLogout} />\n        <Row>\n            <Col\n                m={6}\n                s={12}\n            >\n                <CardPanel className=\"teal darken-3\">\n                    <span className=\"white-text\">\n                        Welcome back to Vision Boarder, {currentUser.firstName}. Select a board or click Create New Board to get started.\n                        </span>\n                </CardPanel>\n            </Col>\n        </Row>\n    </>\n)\n}\n\nexport default HomePage;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport NewBoard from './pages/NewBoard';\nimport BoardView from './pages/BoardView';\nimport HomePage from './pages/HomePage';\nimport { UserProvider } from './utils/GlobalState';\n\nfunction App() {\n  return (\n    <div>\n      <UserProvider>\n      <Router>\n        <Switch>\n          <Route exact path='/'><SignupPage /></Route>\n          <Route path='/login'><LoginPage /></Route>\n          <Route path='/users/:userName'><HomePage /></Route>\n          <Route path='/boards/new/:bid'><NewBoard /></Route>\n          <Route path='/boards/:bid'><BoardView /></Route>\n        </Switch>\n      </Router>\n      </UserProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'materialize-css'\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}